import pressure_plate
import time
import ex2
import sys

class Tee:
    def __init__(self, *files):  # תיקון __init__
        self.files = files
    def write(self, obj):
        for f in self.files:
            f.write(obj)
            f.flush()
    def flush(self):
        for f in self.files:
            f.flush()

results_file = open('results.txt', 'w')
sys.__stdout__ = Tee(sys.__stdout__, results_file)

def solve(game: pressure_plate.Game):
    policy = ex2.Controller(game)
    for i in range(game.get_max_steps()):
        game.submit_next_action(chosen_action=policy.choose_next_action(game.get_current_state()))
        if game.get_current_state()[3]:
            break
    if game.get_current_state()[2] >= game.get_max_steps():
        print('Game result:\n\tMap state ->\n', game.get_current_state()[0], '\n\tFinished in', game.get_current_state()[2],
            'Steps.\n\tReward result->',game.get_current_reward())
    else:
        print('\n\tFinished in', game.get_current_state()[2],
            'Steps.\n\tReward result->',game.get_current_reward(), '\n\tDoor opened at step', game.get_current_state()[3])
    game.show_history()
    return game.get_current_reward()

example1 = {'chosen_action_prob': {'U': [0.9, 0.05, 0.05, 0], 'L': [0.1, 0.8, 0.075, 0.025],
                                  'R': [0.05, 0.05, 0.85, 0.05], 'D': [0.05, 0.1, 0.15, 0.7]},
           'finished_reward': 350,
           'opening_door_reward': {10: 5, 11: 7, 12: 9, 13: 11, 14: 13, 15: 15, 16: 17, 17: 19, 18: 21, 19: 23},
           'step_punishment': -2,
           'seed': 42}

example2 = {'chosen_action_prob': {'U': [0.6, 0.05, 0.05, 0.3], 'L': [0, 0.9, 0.075, 0.025],
                                   'R': [0.25, 0.2, 0.3, 0.25], 'D': [0.05, 0.138, 0.15, 0.662]},
            'finished_reward': 200,
            'opening_door_reward': {10: -3, 11: 2, 12: 15, 13: -6, 14: 3, 15: -10, 16: 17, 17: 0, 18: 1, 19: -2},
            'step_punishment': -2,
            'seed': 42}

example3 = {
    'chosen_action_prob': {
        'U': [0.5, 0.15, 0.2, 0.15],
        'L': [0.2, 0.5, 0.15, 0.15],
        'R': [0.15, 0.2, 0.5, 0.15],
        'D': [0.15, 0.15, 0.2, 0.5]
    },
    'finished_reward': 180,
    'opening_door_reward': {10: 25, 11: 20, 12: 15, 13: 10, 14: 30, 15: 20, 16: 10, 17: 15, 18: 20, 19: 25},
    'step_punishment': -0.5,
    'seed': 222
}

example4 = {
    'chosen_action_prob': {
        'U': [0.7, 0.1, 0.1, 0.1],
        'L': [0.1, 0.6, 0.2, 0.1],
        'R': [0.1, 0.2, 0.6, 0.1],
        'D': [0.2, 0.1, 0.1, 0.6]
    },
    'finished_reward': 280,
    'opening_door_reward': {10: -15, 11: -15, 12: -15, 13: 20, 14: -15, 15: -15, 16: -15, 17: -15, 18: -15, 19: -15},
    'step_punishment': -4,
    'seed': 101
}

example5 = {
    'chosen_action_prob': {
        'U': [0.5, 0.2, 0.2, 0.1],
        'L': [0.1, 0.7, 0.1, 0.1],
        'R': [0.2, 0.1, 0.6, 0.1],
        'D': [0.1, 0.2, 0.2, 0.5]
    },
    'finished_reward': 250,
    'opening_door_reward': {10: -8, 11: 15, 12: 0, 13: -12, 14: 7, 15: -3, 16: 17, 17: 0, 18: 1, 19: -2},
    'step_punishment': -5,
    'seed': 17
}


# experiment with the seed as well
problem1 = (
    (99,99,99,99,99,99),
    (99,2 ,40,98,98,99),
    (99,99,99,10,98,99),
    (99,98,98,98,98,99),
    (99,20,98,98,1 ,99),
    (99,99,99,99,99,99),
)

problem2 = (
    (99,99,99,99,99,99,99,99,99,99,99,99,99,99,99),
    (99,98,98,98,99,99,99,99,99,99,99,99,99,99,99),
    (99,98,99,98,99,99,99,99,99,99,98,98,99,99,99),
    (99,98,99,98,98,99,25,98,99,99,98,98,98,99,99),
    (99,98,99,98,2 ,45,98,98,98,98,98,98,98,99,99),
    (99,98,99,99,99,99,98,98,99,99,99,42,99,99,99),
    (99,98,98,98,98,99,99,99,99,99,22,98,98,99,99),
    (99,99,99,99,98,99,98,98,98,99,98,98,98,99,99),
    (99,98,98,98,98,99,12,98,98,99,98,98,98,99,99),
    (99,98,99,99,23,98,98,15,98,99,99,41,99,99,99),
    (99,98,99,99,98,98,98,98,98,99,20,98,98,98,99),
    (99,98,99,99,98,98,99,98,98,99,98,98,10,98,99),
    (99,98,99,99,98,13,98,98,98,40,11,98,98,98,99),
    (99,98,43,98,98,98,98,98,98,99,21,98,98,1 ,99),
    (99,99,99,99,99,99,99,99,99,99,99,99,99,99,99),)

problem3 = (
    (99, 99, 99, 99, 99, 99),
    (99, 98, 98, 40, 2, 99),
    (99, 98, 10, 99, 99, 99),
    (99, 98, 98, 98, 98, 99),
    (99, 1, 98, 98, 20, 99),
    (99, 99, 99, 99, 99, 99),
)

problem4 = (
    (99, 99, 99, 99, 99, 99, 99, 99),
    (99, 2, 98, 98, 41, 98, 98, 99),
    (99, 98, 99, 99, 99, 98, 98, 99),
    (99, 98, 99, 98, 98, 11, 21, 99),
    (99, 40, 99, 98, 99, 99, 99, 99),
    (99, 98, 10, 98, 98, 98, 20, 99),
    (99, 98, 98, 98, 98, 98, 1, 99),
    (99, 99, 99, 99, 99, 99, 99, 99),
)

problem5 = (
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
    (99, 22, 98, 98, 98, 12, 98, 98, 1, 99),
    (99, 98, 98, 11, 98, 10, 98, 99, 98, 99),
    (99, 98, 98, 99, 42, 99, 99, 99, 98, 99),
    (99, 98, 99, 99, 98, 98, 98, 99, 40, 99),
    (99, 41, 99, 98, 98, 98, 21, 99, 98, 99),
    (99, 98, 99, 98, 98, 98, 20, 99, 98, 99),
    (99, 98, 99, 99, 99, 99, 99, 99, 98, 99),
    (99, 2, 98, 98, 98, 98, 98, 98, 98, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
)

problem6 = (
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 99),
    (99, 99, 99, 98, 98, 99, 99, 99, 99, 99, 98, 99, 98, 98, 99),
    (99, 99, 98, 98, 98, 99, 99, 98, 25, 99, 98, 98, 99, 98, 99),
    (99, 99, 98, 98, 98, 98, 98, 98, 45, 98, 2, 98, 99, 98, 99),
    (99, 99, 99, 42, 99, 99, 99, 98, 98, 99, 99, 99, 99, 98, 99),
    (99, 99, 98, 98, 22, 99, 99, 99, 99, 99, 98, 98, 98, 98, 99),
    (99, 99, 98, 98, 98, 99, 98, 98, 98, 99, 98, 99, 99, 99, 99),
    (99, 99, 98, 98, 98, 99, 98, 98, 12, 99, 98, 98, 98, 98, 99),
    (99, 99, 99, 41, 99, 99, 98, 15, 98, 98, 23, 99, 99, 98, 99),
    (99, 98, 98, 98, 20, 99, 98, 98, 98, 98, 98, 99, 99, 98, 99),
    (99, 98, 10, 98, 98, 99, 98, 98, 99, 98, 98, 99, 99, 98, 99),
    (99, 98, 98, 98, 11, 40, 98, 98, 98, 13, 98, 99, 99, 98, 99),
    (99, 1, 98, 98, 21, 99, 98, 98, 98, 98, 98, 98, 43, 98, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
)

problem7 = (
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
    (99, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99),  
    (99, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 99),
    (99, 98, 99, 21, 98, 99, 23, 98, 98, 98, 98, 98, 98, 98, 99),  
    (99, 98, 99, 98, 98, 43, 98, 98, 98, 13, 98, 98, 98, 98, 99),
    (99, 98, 99, 11, 98, 99, 98, 98, 10, 98, 98, 98, 98, 98, 99),  
    (99, 98, 99, 98, 98, 99, 98, 98, 98, 98, 98, 99, 99, 99, 99),
    (99, 1, 99, 99, 99, 99, 99, 99, 41, 99, 99, 99, 98, 2, 99),  
    (99, 98, 99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 99),
    (99, 98, 99, 98, 98, 98, 99, 98, 98, 98, 14, 99, 98, 98, 99),  
    (99, 98, 99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 99),
    (99, 98, 99, 20, 98, 98, 44, 98, 98, 98, 24, 99, 98, 98, 99),  
    (99, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 40, 99),
    (99, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99),              
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
)

problem8 = (
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
    (99, 98, 99, 99, 98, 98, 98, 98, 99, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 98, 22, 99, 98, 99, 99, 98, 99, 99, 98, 99),
    (99, 98, 98, 99, 99, 99, 99, 98, 11, 98, 98, 99, 99, 98, 99),
    (99, 99, 98, 98, 12, 98, 99, 14, 99, 99, 98, 99, 99, 98, 99),
    (99, 99, 98, 98, 98, 98, 99, 98, 99, 99, 21, 99, 99, 98, 99),
    (99, 98, 98, 98, 98, 98, 99, 98, 98, 99, 99, 99, 99, 98, 99),
    (99, 98, 98, 98, 98, 99, 99, 98, 98, 99, 99, 99, 99, 98, 99),
    (99, 23, 98, 98, 99, 99, 99, 24, 98, 99, 99, 99, 99, 98, 99),
    (99, 99, 99, 98, 99, 99, 99, 99, 44, 99, 99, 99, 99, 98, 99),
    (99, 98, 98, 98, 99, 99, 99, 99, 98, 98, 98, 98, 98, 98, 99),
    (99, 98, 99, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 99),
    (99, 98, 99, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 99),
    (99, 98, 13, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 99),
    (99, 1, 98, 98, 99, 99, 99, 99, 99, 2, 43, 42, 41, 98, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
)

problem9 = (
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
    (99, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 2, 99),
    (99, 99, 99, 99, 99, 99, 99, 49, 99, 99, 99, 99, 99, 99, 99, 99, 98, 99, 99, 99),
    (99, 98, 98, 26, 99, 29, 98, 98, 27, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 18, 98, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 46, 98, 98, 98, 98, 47, 98, 98, 98, 98, 48, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 17, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 16, 99, 98, 98, 19, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 28, 98, 98, 98, 99, 98, 98, 98, 98, 99),
    (99, 99, 42, 99, 99, 99, 43, 99, 99, 99, 99, 99, 44, 99, 99, 99, 99, 45, 99, 99),
    (99, 22, 98, 98, 98, 12, 98, 98, 98, 99, 98, 98, 98, 24, 98, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 13, 98, 98, 98, 23, 99, 98, 98, 98, 98, 98, 98, 98, 98, 25, 99),
    (99, 98, 98, 98, 98, 98, 98, 98, 98, 99, 98, 14, 98, 98, 98, 98, 98, 98, 98, 99),
    (99, 98, 98, 98, 98, 98, 98, 98, 98, 99, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99),
    (99, 99, 99, 99, 40, 99, 99, 99, 99, 99, 99, 99, 99, 99, 41, 99, 99, 99, 99, 99),
    (99, 98, 98, 98, 98, 98, 98, 98, 98, 99, 21, 98, 98, 98, 98, 11, 98, 15, 98, 99),
    (99, 98, 98, 98, 98, 20, 10, 98, 98, 1, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
)

problem10 = (
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 23, 99, 98, 98, 98, 98, 99),
    (99, 99, 99, 99, 99, 99, 98, 98, 98, 99, 14, 98, 98, 98, 98, 99, 98, 98, 13, 98, 99),
    (99, 99, 99, 99, 99, 24, 98, 98, 98, 43, 98, 98, 98, 99, 99, 99, 98, 98, 99, 99, 99),
    (99, 99, 99, 99, 99, 98, 98, 15, 98, 99, 99, 98, 98, 99, 99, 99, 98, 98, 99, 99, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 99, 98, 98, 99, 99, 99, 98, 98, 99, 99, 99),
    (99, 25, 98, 98, 44, 98, 98, 98, 98, 99, 99, 98, 98, 98, 99, 99, 98, 98, 99, 99, 99),
    (99, 98, 98, 98, 99, 98, 98, 98, 98, 99, 99, 98, 98, 98, 99, 98, 11, 98, 99, 99, 99),
    (99, 98, 98, 98, 99, 99, 98, 98, 98, 99, 99, 98, 98, 98, 99, 98, 98, 98, 99, 99, 99),
    (99, 98, 98, 99, 99, 99, 99, 99, 99, 99, 98, 98, 99, 99, 99, 99, 98, 98, 99, 99, 99),
    (99, 99, 45, 99, 99, 99, 99, 99, 99, 99, 99, 41, 99, 99, 99, 99, 99, 42, 99, 99, 99),
    (99, 98, 98, 98, 99, 99, 99, 99, 99, 99, 98, 98, 99, 99, 99, 99, 98, 98, 98, 99, 99),
    (99, 98, 98, 98, 99, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98, 12, 98, 98, 98, 99, 99),
    (99, 98, 16, 98, 98, 98, 98, 17, 27, 99, 22, 98, 98, 98, 98, 98, 98, 98, 21, 99, 99),
    (99, 98, 26, 98, 98, 98, 98, 16, 26, 99, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99),
    (99, 99, 99, 99, 99, 99, 46, 99, 99, 99, 99, 99, 99, 99, 40, 99, 99, 99, 99, 99, 99),
    (99, 99, 99, 99, 28, 18, 98, 99, 99, 99, 98, 10, 98, 98, 98, 98, 98, 98, 20, 99, 99),
    (99, 99, 99, 99, 29, 98, 98, 99, 99, 99, 98, 98, 98, 99, 99, 99, 99, 98, 98, 99, 99),
    (99, 99, 99, 99, 19, 98, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 98, 99, 99),
    (99, 99, 99, 99, 98, 98, 98, 98, 98, 47, 48, 49, 98, 98, 98, 98, 2, 99, 1, 99, 99),
    (99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99),
)


problems = [
    problem1,
    problem2,
    problem3,
    problem4,
    problem5,
    problem6,
    problem7,
    problem8,
    problem9,
    problem10
]

examples = [example1, example2, example3, example4, example5]

def solve_game(ind, problem, example, debug_mode):
    start = time.time()
    game = pressure_plate.create_pressure_plate_game((200, problem, example, debug_mode))
    solve(game)
    end = time.time()
    print(f"Solved problem {ind} in {end - start:.3f} seconds")
    print("###############################################")

def main():
    debug_mode = True
    for i, problem in enumerate(problems):
        ind = i + 1
        print("\n\n")
        print(f"##  problem{ind} ##")
        for example in examples:
            solve_game(ind, problem, example, debug_mode=False)

if __name__ == "__main__":
    main()
